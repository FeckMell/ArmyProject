#include "stdafx.h"
#include "TCPSocketBuf.h"
using namespace std;

TCPSocketBuf::TCPSocketBuf()
{
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
TCPSocketBuf::TCPSocketBuf(uint8_t* data_, size_t size_)
{
	if (size_ == 0 || data_ == nullptr) return;

	thatData.resize(size_);
	memcpy(thatData.data(), data_, size_);// отловить что data_ меньше size_
	thatSize = size_;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
TCPSocketBuf::TCPSocketBuf(char* data_, size_t size_)
{
	if (size_ == 0 || data_ == nullptr) return;

	thatData.resize(size_);
	memcpy(thatData.data(), data_, size_);// отловить что data_ меньше size_
	thatSize = size_;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
TCPSocketBuf::TCPSocketBuf(string& data_)
{
	if ( data_.empty() || data_.length() > 8000 ) return;

	thatData.resize(data_.length());
	memcpy(thatData.data(), data_.c_str(), data_.length());
	thatSize = data_.length();
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
TCPSocketBuf::~TCPSocketBuf()
{
	thatSize = 0;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
int TCPSocketBuf::Add(uint8_t* data_, size_t size_)
{
	if (size_ < 1) return -1;
	else if (data_ == nullptr) return -2;

	thatData.resize(thatSize + size_);
	memcpy(thatData.data() + thatSize, data_, size_);
	thatSize += size_;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
int TCPSocketBuf::Add(char* data_, size_t size_)
{
	if (size_ < 1) return -1;
	else if (data_ == nullptr) return -2;

	thatData.resize(thatSize + size_);
	memcpy(thatData.data() + thatSize, data_, size_);
	thatSize += size_;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
int TCPSocketBuf::Add(std::string& data_)
{
	if ( data_.empty() ) return -1;

	thatData.resize(thatSize + data_.length());
	memcpy(thatData.data() + thatSize, data_.c_str(), data_.length());
	thatSize += data_.length();
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
int TCPSocketBuf::Add(TCPSocketBuf& buf_)
{
	if (buf_.Size() == 0) return -1;

	thatData.resize(thatSize + buf_.Size());
	memcpy(thatData.data() + thatSize, buf_.Data(), buf_.Size());
	thatSize += buf_.Size();
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
void TCPSocketBuf::Clear()
{
	thatData.clear();
	thatSize = 0;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
uint8_t* TCPSocketBuf::Data()
{
	return thatData.data();
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
size_t TCPSocketBuf::Size()
{
	return thatSize;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
int TCPSocketBuf::SetSize(size_t size_)
{
	if (size_ > 8000) return -1;
	if (size_ < 1) return -2;
	if (thatSize + size_ > 8000) return -3;
	thatSize += size_;
}
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------
//*///------------------------------------------------------------------------------------------